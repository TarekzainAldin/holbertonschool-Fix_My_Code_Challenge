#include "lists.h"
#include <stdlib.h>

/**
 * delete_dnodeint_at_index - Delete a node at a specific index from a list
 *
 * @head: A pointer to the first element of a list
 * @index: The index of the node to delete
 *
 * Return: 1 on success, -1 on failure
 */
int delete_dnodeint_at_index(dlistint_t **head, unsigned int index)
{
	dlistint_t *tmp;
	unsigned int p;

	/* If list is empty */
	if (*head == NULL)
		return (-1);

	tmp = *head;
	p = 0;

	/* Traverse the list to find the node at the given index */
	while (tmp != NULL && p < index)
	{
		tmp = tmp->next;
		p++;
	}

	/* If the node at the given index does not exist */
	if (tmp == NULL)
		return (-1);

	/* If deleting the head node (index 0) */
	if (index == 0)
	{
		*head = tmp->next; /* Update the head to the next node */
		if (*head != NULL)
			(*head)->prev = NULL; /* Set the new head's prev to NULL */
	}

	/* For non-head nodes */
	else
	{
		/* Adjust the previous node's next pointer */
		if (tmp->prev != NULL)
			tmp->prev->next = tmp->next;

		/* Adjust the next node's prev pointer */
		if (tmp->next != NULL)
			tmp->next->prev = tmp->prev;
	}

	/* Free the memory of the node to be deleted */
	free(tmp);

	return (1);
}
